version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: restaurant-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: restaurant
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant-network
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: restaurant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restaurant-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: restaurant-backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=restaurant
      - DB_SYNC=true
      - JWT_SECRET=restaurant-management-system-secret-key
      - JWT_EXPIRATION=1d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - restaurant-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: restaurant-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - restaurant-network
    restart: unless-stopped

networks:
  restaurant-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
